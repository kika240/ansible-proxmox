---
- name: Create LXC Container
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yml
    - vault.yml
  vars:
    vm_planned: "{{ query('netbox.netbox.nb_lookup', 'virtual-machines',
                      api_endpoint=vars['netbox_url'],
                      api_filter='status=planned',
                      token=vars['netbox_token']) }}"
  tasks:
    - name: Obtain list of devices from NetBox
      debug:
        msg: "{{ vm_planned }}"
      tags:
       - debug

                  
    - name: Create LXC Container
      community.general.proxmox:
        hostname: "{{ item.value.name }}"
        node: "{{ item.value.cluster.name }}"
        password: "{{ defaultpassword }}"
        memory: "{{ item.value.memory | default('1024') }}"
        storage:  "{{ item.value.custom_fields.storageid }}"
        netif: '{"net0":"name=eth0,ip=dhcp,bridge=vmbr2,tag=1"}'
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_token_secret }}"
        ostemplate: "{{ item.value.custom_fields.OSTemplate }}"
        vmid: "{{ item.value.custom_fields.vmid }}"
        disk: "{{ item.value.custom_fields.storageid }}:{{ item.value.disk }}"
        cpus : "{{ item.value.vcpus|int}}"
        timeout: 120
        validate_certs: false
      loop: "{{ vm_planned }}"
      register: output
      tags: debug

    - name: Obtain list of devices from NetBox
      debug:
        msg: "{{ output }}"
      tags:
       - debug

    - name: Pause for 10 seconds to build app cache
      ansible.builtin.pause:
        seconds: 10

    - name: Start LXC Container
      community.general.proxmox:
        vmid: "{{ item.vmid }}"
        state: started
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_token_id }}"
        api_token_secret: "{{ proxmox_token_secret }}"
        validate_certs: false
      loop: "{{ output.results }}"
      when: item.failed == false

    - name: Tag as active in Netbox
      netbox.netbox.netbox_virtual_machine:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item.item.value.name }}"
          status: active
      loop: "{{ output.results }}"
      when: item.failed == false
      tags: debug
